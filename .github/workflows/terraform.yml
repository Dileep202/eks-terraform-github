name: Terraform
on:
  workflow_dispatch:
    inputs:
      tfvars_file:
        description: 'Terraform tfvars file'
        required: true
        default: 'dev.tfvars'
        type: string
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - 'plan'
          - 'apply'
          - 'destroy'
env:
     AWS_DEFAULT_REGION: 'us-east-1'
     AWS_REGION: 'us-east-1'
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
permissions:
  contents: read

jobs:
  CheckOut-repo:
    runs-on: ubuntu-latest
    environment: Dev
    defaults:
      run:
        shell: bash
        working-directory: .
    env:  
      TF_VAR_file: ${{ github.event.inputs.tfvars_file }}
      AWS_REGION: 'us-east-1'
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  Settingup-Terraform:
    runs-on: ubuntu-latest
    environment: Dev
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.4
          terraform_wrapper: false
  Terraform-initialization:
    runs-on: ubuntu-latest
    environment: Dev
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Terraform initialization
        run: terraform init
        env:
          TF_VAR_file: ${{ github.event.inputs.tfvars_file }}
          AWS_REGION: 'us-east-1'
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  Terraform-Formatting-Validating:
    runs-on: ubuntu-latest
    needs: Terraform-Initializing

    steps:
        
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.4
        
    - name: Terraform Init
      working-directory: eks
      run: terraform init
      
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: eks
      run: terraform fmt

    - name: Terraform Validate
      working-directory: eks
      run: terraform validate

  Terraform-Action:
    runs-on: ubuntu-latest
    needs: Terraform-Formatting-Validating
    
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.4

    - name: Terraform Init
      working-directory: eks
      run: terraform init

      
    - name: Terraform Plan
      if: ${{ github.event.inputs.action  == 'plan' }}
      working-directory: eks
      # Generates an execution plan for Terraform
      run: |
        terraform plan -var-file=${{ github.event.inputs.tfvars_file }} -input=false

    
      # Apply the Terraform Configuration according to the parameter
    - name: Terraform Action
      if: ${{ github.event.inputs.action  == 'apply' }}
      working-directory: eks
      run: terraform ${{ github.event.inputs.action }} -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false

    - name: Terraform Destroy
      if: ${{ github.event.inputs.action == 'destroy' }}
      working-directory: eks
      run: terraform ${{ github.event.inputs.action }} -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false
  



